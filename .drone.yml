kind: pipeline
type: docker
name: Trek12_API
 
trigger:
  event:
    - push


steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:6.0
    volumes:
      - name: docs
        path: /docs
    commands:
      - cd Sources/
      - dotnet restore Trek12_API.sln
      - dotnet build Trek12_API.sln -c Release --no-restore
      - dotnet publish Trek12_API.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:6.0
    commands:
      - cd Sources/
      - dotnet restore Trek12_API.sln
      - dotnet test Trek12_API.sln --no-restore
    depends_on: [build]

  - name: code-analysis
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dronesonarplugin-dotnet6
    commands:
      - cd Sources/
      - dotnet restore Trek12_API.sln
      - dotnet sonarscanner begin /k:Trek12_API /d:sonar.host.url="https://codefirst.iut.uca.fr/sonar"  /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
      - dotnet build Trek12_API.sln -c Release --no-restore
      - dotnet test Trek12_API.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish Trek12_API.sln -c Release --no-restore -o $CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
    secrets: [ SECRET_SONAR_LOGIN ]
    settings:
    # accessible en ligne de commande par $${PLUGIN SONAR HOST}
      sonar_host: https://codefirst.iut.uca.fr/sonar/
# accessible en ligne de commande par $${PLUGIN_SONAR_TOKEN}
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
      depends on: [tests]

   # docker image build
  - name: docker-build
    image: plugins/docker
    settings:
       dockerfile: Sources/Trek12_API/Dockerfile
       context: Sources/
       registry: hub.codefirst.iut.uca.fr
       repo: hub.codefirst.iut.uca.fr/Trek_Prod/Trek12_API
       username:
         from_secret: SECRET_REGISTRY_USERNAME
       password:
         from_secret: SECRET_REGISTRY_PASSWORD

  # container deployment
  - name: deploy-container
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/Trek_Prod/Trek12_API:latest
        CONTAINERNAME: trek12api
        COMMAND: create
        OVERWRITE: true
        ADMINS: maxencelanone, aurelienpintrand, theodupin, zakariyasaoula
    depends_on: [ docker-build ]

volumes:
- name: docs
  temp: {}
